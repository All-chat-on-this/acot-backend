server:
  port: 48080
  servlet:
    encoding:
      enabled: true
      charset: UTF-8 # 必须设置 UTF-8，避免 WebFlux 流式返回（AI 场景）会乱码问题
      force: true

--- #################### 数据库相关配置 ####################

spring:
  application:
    name: acot-backend
  spring:
    autoconfigure:
      exclude:
        - org.springframework.ai.autoconfigure.vectorstore.qdrant.QdrantVectorStoreAutoConfiguration # 禁用 AI 模块的 Qdrant，手动创建
        - org.springframework.ai.autoconfigure.vectorstore.milvus.MilvusVectorStoreAutoConfiguration # 禁用 AI 模块的 Milvus，手动创建
  # Servlet 配置
  servlet:
    # 文件上传相关配置项
    multipart:
      max-file-size: 16MB # 单个文件大小
      max-request-size: 32MB # 设置总上传的文件大小
  # 数据源配置项
  datasource:
    url: jdbc:mysql://117.72.111.131:3306/acot-dev?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&rewriteBatchedStatements=true
    username: root
    password: mkyr15973
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid: # Druid 【监控】相关的全局配置
      web-stat-filter:
        enabled: true
      stat-view-servlet:
        enabled: true
        allow: # 设置白名单，不填则允许所有访问
        url-pattern: /druid/*
        login-username: # 控制台管理用户名和密码
        login-password:
      filter:
        stat:
          enabled: true
          log-slow-sql: true # 慢 SQL 记录
          slow-sql-millis: 100
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

  # Redis 配置 - 环境特定
  data:
    redis:
      host: 117.72.111.131 # 地址
      port: 6379 # 端口
      database: 1 # 数据库索引
      password: mkyr15973 # 密码，建议生产环境开启
      timeout: 5000 # 连接超时时间(毫秒)
      lettuce:
        pool:
          max-active: 16 # 连接池最大连接数（使用负值表示没有限制）
          max-idle: 8 # 连接池中的最大空闲连接
          min-idle: 4 # 连接池中的最小空闲连接
          max-wait: 3000 # 连接池最大阻塞等待时间（使用负值表示没有限制）
          time-between-eviction-runs: 60000 # 空闲连接检测间隔时间

  # Jackson 配置项
  jackson:
    serialization:
      write-dates-as-timestamps: true # 设置 Date 的格式，使用时间戳
      write-date-timestamps-as-nanoseconds: false # 设置不使用 nanoseconds 的格式。例如说 1611460870.401，而是直接 1611460870401
      write-durations-as-timestamps: true # 设置 Duration 的格式，使用时间戳
      fail-on-empty-beans: false # 允许序列化无属性的 Bean

  # Cache 配置项
  cache:
    type: REDIS
    redis:
      time-to-live: 1h # 默认过期时间为 1 小时
      key-prefix: acot_cache_ # 缓存key前缀
      use-key-prefix: true # 是否使用前缀
      cache-null-values: true # 是否缓存空值，可以防止缓存穿透

# Redis 和 Redisson 额外配置
redisson:
  config:
    single:
      address: redis://${spring.data.redis.host}:${spring.data.redis.port}
      database: ${spring.data.redis.database}
      password: ${spring.data.redis.password}
      connection-pool-size: 64
      connection-minimum-idle-size: 8
      idle-connection-timeout: 10000
      retry-attempts: 3
      retry-interval: 1000
      connection-timeout: 10000
      timeout: 3000
      # 开发环境关闭SSL
      ssl-enbled: false
      # 添加DNS监控，自动处理连接问题
      dns-monitoring: true
      # 添加订阅连接的最小空闲连接数
      subscription-connection-minimum-idle-size: 2
      # 添加订阅连接池大小
      subscription-connection-pool-size: 16
      # TCP NoDelay
      tcp-no-delay: true

--- #################### 定时任务相关配置 ####################

# Quartz 配置项，对应 QuartzProperties 配置类
spring:
  quartz:
    auto-startup: true # 测试环境，需要开启 Job
    scheduler-name: schedulerName # Scheduler 名字。默认为 schedulerName
    job-store-type: jdbc # Job 存储器类型。默认为 memory 表示内存，可选 jdbc 使用数据库。
    wait-for-jobs-to-complete-on-shutdown: true # 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true
    properties: # 添加 Quartz Scheduler 附加属性，更多可以看 http://www.quartz-scheduler.org/documentation/2.4.0-SNAPSHOT/configuration.html 文档
      org:
        quartz:
          # Scheduler 相关配置
          scheduler:
            instanceName: schedulerName
            instanceId: AUTO # 自动生成 instance ID
          # JobStore 相关配置
          jobStore:
            # JobStore 实现类。可见博客：https://blog.csdn.net/weixin_42458219/article/details/122247162
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            isClustered: true # 是集群模式
            clusterCheckinInterval: 15000 # 集群检查频率，单位：毫秒。默认为 15000，即 15 秒
            misfireThreshold: 60000 # misfire 阀值，单位：毫秒。
          # 线程池相关配置
          threadPool:
            threadCount: 25 # 线程池大小。默认为 10 。
            threadPriority: 5 # 线程优先级
            class: org.quartz.simpl.SimpleThreadPool # 线程池类型
    jdbc: # 使用 JDBC 的 JobStore 的时候，JDBC 的配置
      initialize-schema: NEVER # 是否自动使用 SQL 初始化 Quartz 表结构。这里设置成 never ，我们手动创建表结构。

# JWT Configuration
jwt:
  # Secret key for signing JWT tokens
  secret: ${JWT_SECRET:58yTJHRZs64wytO38BUGLZnLb07QpjDvfEHARFbw5tGclPIMi9Cm2qVKadWXe0x1}
  # Token expiration time in milliseconds (24 hours)
  expiration: ${JWT_EXPIRATION:86400000}

# MyBatis Plus 的配置项
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: NONE # "智能"模式，基于 IdTypeEnvironmentPostProcessor + 数据源的类型，自动适配成 AUTO、INPUT 模式。
      #      id-type: AUTO # 自增 ID，适合 MySQL 等直接自增的数据库
      #      id-type: INPUT # 用户输入 ID，适合 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库
      #      id-type: ASSIGN_ID # 分配 ID，默认使用雪花算法。注意，Oracle、PostgreSQL、Kingbase、DB2、H2 数据库时，需要去除实体类上的 @KeySequence 注解
      logic-delete-field: deleted
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
    banner: false # 关闭控制台的 Banner 打印
  encryptor:
    password: ZmQ4vfnsB0KGbNU6 # 加解密的秘钥，可使用 https://www.imaegoo.com/2020/aes-key-generator/ 网站生成

mybatis-plus-join:
  banner: false # 是否打印 mybatis plus join banner，默认true
  sub-table-logic: true # 全局启用副表逻辑删除，默认true。关闭后关联查询不会加副表逻辑删除
  ms-cache: true # 拦截器MappedStatement缓存，默认 true
  table-alias: t # 表别名(默认 t)
  logic-del-type: on # 副表逻辑删除条件的位置，支持 WHERE、ON，默认 ON

# VO 转换（数据翻译）相关
easy-trans:
  is-enable-global: true # 启用全局翻译（拦截所有 SpringMVC ResponseBody 进行自动翻译 )。如果对于性能要求很高可关闭此配置，或通过 @IgnoreTrans 忽略某个接口

# Social Login Configuration - 环境特定
justauth:
  enabled: true
  type:
    DINGTALK: # 钉钉
      client-id: dingvrnreaje3yqvzhxg
      client-secret: i8E6iZyDvZj51JIb0tYsYfVQYOks9Cq1lgryEjFRqC79P3iJcrxEwT6Qk2QvLrLI
      ignore-check-redirect-uri: true
    WECHAT_ENTERPRISE: # 企业微信
      client-id: wwd411c69a39ad2e54
      client-secret: 1wTb7hYxnpT2TUbIeHGXGo7T0odav1ic10mLdyyATOw
      agent-id: 1000004
      ignore-check-redirect-uri: true
    # noinspection SpringBootApplicationYaml
    WECHAT_MINI_APP: # 微信小程序
      client-id: ${wx.miniapp.appid}
      client-secret: ${wx.miniapp.secret}
      ignore-check-redirect-uri: true
      ignore-check-state: true # 微信小程序，不会使用到 state，所以不进行校验
    WECHAT_MP: # 微信公众号
      client-id: ${wx.mp.app-id}
      client-secret: ${wx.mp.secret}
      ignore-check-redirect-uri: true
    # QQ configuration
    QQ:
      client-id: ${QQ_CLIENT_ID:your_client_id}
      client-secret: ${QQ_CLIENT_SECRET:your_client_secret}
      redirect-uri: ${QQ_REDIRECT_URI:http://localhost:8080/api/auth/social/callback?type=36}
    # WeChat Open configuration
    WECHAT_OPEN:
      client-id: ${WX_CLIENT_ID:your_client_id}
      client-secret: ${WX_CLIENT_SECRET:your_client_secret}
      redirect-uri: ${WX_REDIRECT_URI:http://localhost:8080/api/auth/social/callback?type=32}
  cache:
    type: REDIS
    prefix: 'social_auth_state:' # 缓存前缀，目前只对 Redis 缓存生效，默认 JUSTAUTH::STATE::
    timeout: 24h # 超时时长，目前只对 Redis 缓存生效，默认 3 分钟

debug: true # 调试模式，打印更多日志
